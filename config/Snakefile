# shell environment used for each job
# note, this is a naked shell, not aware of your bashrc!
shell.executable("/bin/bash")
# unofficial bash strict mode
shell.prefix("set -euo pipefail;")# don't forget trailing semicolon


rule all:
    input:
        expand("log/{sample}.done", sample=config['samples'].keys())

rule check_done:
    input:
        expand("reads/{{sample}}_{index}.fastq.gz", index=range(1,3))
    output:
        touch("log/{sample}.done")


rule build_index:
    input:
        genome=lambda wildcards: config['samples'][wildcards.sample]['genome'],
    output:
        expand("genome_index/{{sample}}.{index}.bt2", index=range(1,5)),
        expand("genome_index/{{sample}}.rev.{index}.bt2", index=range(1,3)),
    params:
        prefix="genome_index/{sample}"
    log:
        "log/build_index.log"
    shell:
        '''
        bowtie2-build {input.genome} {params.prefix}
        '''


rule align_probe:
    input:
        expand("genome_index/{{sample}}.{index}.bt2", index=range(1,5)),
        expand("genome_index/{{sample}}.rev.{index}.bt2", index=range(1,3)),
        probe="/mnt/projects/lub/workspace/results/csite/wessim/S03723314/S03723314_Probes.txt.fa",
    output:
        bam="mapping/{sample}.sorted.bam",
        bai="mapping/{sample}.sorted.bam.bai",
    params:
        rprefix="genome_index/{sample}",
        bprefix="mapping/{sample}.sorted",
    log:
        "log/align_probe.log"
    shell:
        '''
        bowtie2 --local --very-sensitive-local -p 8 --mp 8 --rdg 10,8 --rfg 10,8 -k 10000 -f -x {params.rprefix} -U {input.probe} | samtools view -bSu - | samtools sort - {params.bprefix}
        samtools index {output.bam}
        '''

rule run_capsim:
    input:
        genome=lambda wildcards: config['samples'][wildcards.sample]['genome'],
        bam="mapping/{sample}.sorted.bam",
        bai="mapping/{sample}.sorted.bam.bai",
    params:
        readnum=lambda wildcards: config['samples'][wildcards.sample]['readnum'],
        sprefix="reads/{sample}",
    output:
        expand("reads/{{sample}}_{index}.fastq.gz", index=range(1,3))
    log:
        "log/run_capsim.log"
    shell:
        '''
        jsa.sim.capsim --reference {input.genome} --probe {input.bam} --ID {wildcards.sample}  --miseq {params.sprefix} --fmedian {config[fmedian]} --illen {config[rlen]} --num {params.readnum} --seed {config[seed]}
        '''
